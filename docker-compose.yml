version: '2.1'

services:
  discovery-service:
    container_name: discovery-service
    build: ./discovery-service
    expose:
      - '8761/tcp'
    environment:
      - spring.profiles.active=docker
      - server.port=8761
      - eureka.client.serviceUrl.defaultZone=http://discovery-service:8761/eureka
      - eureka.client.register-with-eureka=false
      - eureka.client.fetch-registry=false
      - eureka.instance.prefer-ip-address=true
    ports:
      - '8761:8761'
    networks:
      - insurance-wallet-network
    restart: always

  api-gateway:
    container_name: api-gateway
    build: ./api-gateway
    expose:
      - '8082/tcp'
    environment:
      - spring.profiles.active=docker
      - server.port=8761
      - eureka.client.serviceUrl.defaultZone=http://discovery-service:8761/eureka
    ports:
      - '8082:8082'
    networks:
      - insurance-wallet-network
    depends_on:
      - discovery-service
    links:
      - discovery-service
    restart: always

  aggregate-service:
    container_name: aggregate-service
    build: ./aggregate-service
    environment:
      - spring.profiles.active=docker
      - server.port=8761
      - eureka.client.serviceUrl.defaultZone=http://discovery-service:8761/eureka
    networks:
      - insurance-wallet-network
    depends_on:
      discovery-service:
        condition: service_started
      aggregate-service-db:
        condition: service_healthy
    links:
      - discovery-service
      - aggregate-service-db

  aggregate-service-db:
    container_name: aggregate-service-db
    image: postgres:13.4-alpine
    environment:
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=test
      - POSTGRES_DB=aggregate-db
    networks:
      - insurance-wallet-network
    ports:
      - '5432:5332'
    volumes:
      - aggregate-service-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "aggregate-db", "-U", "test"]
      timeout: 45s
      interval: 10s
      retries: 10

  users-service:
    container_name: users-service
    build: ./users-service
    environment:
      - spring.profiles.active=docker
      - server.port=8761
      - eureka.client.serviceUrl.defaultZone=http://discovery-service:8761/eureka
    networks:
      - insurance-wallet-network
    volumes:
      - users-service-db-volume:/var/lib/postgresql/data
    depends_on:
      discovery-service:
        condition: service_started
      users-service-db:
        condition: service_healthy
    links:
      - discovery-service
      - users-service-db

  users-service-db:
    container_name: users-service-db
    image: postgres:13.4-alpine
    environment:
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=test
      - POSTGRES_DB=users-db
    networks:
      - insurance-wallet-network
    ports:
      - '5433:5332'
    volumes:
      - users-service-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "users-db", "-U", "test" ]
      timeout: 45s
      interval: 10s
      retries: 10

  insurance-service:
    container_name: insurance-service
    build: ./insurance-service
    environment:
      - spring.profiles.active=docker
      - server.port=8761
      - eureka.client.serviceUrl.defaultZone=http://discovery-service:8761/eureka
    networks:
      - insurance-wallet-network
    volumes:
        - insurance-service-db-volume:/var/lib/postgresql/data
    depends_on:
      discovery-service:
        condition: service_started
      insurance-service-db:
          condition: service_healthy
    links:
      - discovery-service
      - insurance-service-db

  insurance-service-db:
    container_name: insurance-service-db
    image: postgres:13.4-alpine
    environment:
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=test
      - POSTGRES_DB=users-db
    networks:
      - insurance-wallet-network
    ports:
      - '5434:5332'
    volumes:
      - insurance-service-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "users-db", "-U", "test" ]
      timeout: 45s
      interval: 10s
      retries: 10

volumes:
  aggregate-service-db-volume:
  users-service-db-volume:
  insurance-service-db-volume:

networks:
  insurance-wallet-network:
    driver: bridge
